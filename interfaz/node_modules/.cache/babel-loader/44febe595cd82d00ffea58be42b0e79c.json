{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Natalia A\\\\Desktop\\\\Software_Gestion_de_Proyectos\\\\src\\\\components\\\\TablaEstudiante2.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from \"react/cjs/react.development\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"../Estilos/producto.css\";\nimport axios from \"axios\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FilaProducto = _ref => {\n  _s();\n\n  let {\n    productos\n  } = _ref;\n  console.log(\"productos\", productos);\n  const [edit, setEdit] = useState(false);\n  const [infoNuevoProducto, setInfoNuevoProducto] = useState({\n    id: productos._id,\n    codigo: productos.codigo,\n    nombre: productos.nombre,\n    precio: productos.precio,\n    estado: productos.estado\n  });\n\n  const actualizarProducto = async () => {\n    console.log(infoNuevoProducto); // const options = {\n    //   method: 'PUT',\n    //   url: 'http://localhost:3001/api/product',\n    //   headers: {'Content-Type': 'application/json'},\n    //   data: { infoNuevoProducto}\n    // };\n\n    await axios.put('http://localhost:3001/api/product', infoNuevoProducto).then(function (response) {\n      console.log(response.data);\n      toast.success(\"producto modificado con exito\");\n      setEdit(false);\n      window.location.reload();\n    }).catch(function (error) {\n      toast.error(\"Error al modificar producto\");\n      console.error(error);\n    });\n  }; // eslint-disable-next-line no-lone-blocks\n\n\n  {\n    /*return (\r\n       \r\n    <tr> \r\n     {edit ? (\r\n    <>\r\n       <td>\r\n         <input  \r\n         type =\"text\" \r\n         value={infoNuevoProducto.codigo}\r\n         onChange={(e)=>setInfoNuevoProducto({...infoNuevoProducto, codigo:e.target.value})} \r\n         />\r\n       </td>\r\n       <td>\r\n         <input \r\n         type =\"text\" \r\n         value={infoNuevoProducto.nombre}\r\n         onChange={(e)=>setInfoNuevoProducto({...infoNuevoProducto, nombre:e.target.value})}\r\n         />\r\n       </td>\r\n       <td>\r\n         <input \r\n         type =\"text\"\r\n         value={infoNuevoProducto.precio}\r\n         onChange={(e)=>setInfoNuevoProducto({...infoNuevoProducto, precio:e.target.value})}\r\n         />\r\n         </td>\r\n       <td>\r\n         <input \r\n         type =\"text\"\r\n         value={infoNuevoProducto.estado}\r\n         onChange={(e)=>setInfoNuevoProducto({...infoNuevoProducto, estado:e.target.value})} \r\n         />\r\n         </td>\r\n       </>\r\n     \r\n      ): (\r\n        <>\r\n     <td>{productos.codigo} </td>\r\n     <td>{productos.nombre}</td> \r\n     <td>{productos.precio}</td>\r\n     <td>{productos.estado}</td> \r\n       </>\r\n      )}\r\n      <td>\r\n      <div >\r\n        {edit ? (\r\n        <a \r\n        onClick={()=> actualizarProducto()} \r\n        className=\"fas fa-check a\"\r\n        />\r\n        ):(\r\n        <a \r\n        onClick={()=>setEdit(!edit)} \r\n        className=\"fas fa-pencil-alt a\" \r\n        />\r\n        )}\r\n        < a  \r\n        className=\"fas fa-trash-alt a\"/>\r\n        </div>\r\n        </td>\r\n        </tr>\r\n    \r\n    \n    ) */\n  }\n};\n\n_s(FilaProducto, \"1xxDkEIISLDRlSN2795xxNyyj54=\");\n\n_c = FilaProducto;\n\nconst TablaEstudiante2 = _ref2 => {\n  _s2();\n\n  let {\n    listaProductos,\n    setMostrarProductos\n  } = _ref2;\n  useEffect(() => {\n    console.log(\"este es el contenido del la lsita de productos\", listaProductos);\n  }, [listaProductos]);\n  const form = useRef(null);\n\n  const submitForm = async e => {\n    e.preventDefault();\n    const fd = new FormData(form.current); // esa variable esta como objeto vacio y alli ingresa los imput como un formato Json, \n\n    const nuevoProducto = {};\n    fd.forEach((value, key) => {\n      nuevoProducto[key] = value;\n    });\n    setMostrarProductos([...listaProductos, nuevoProducto]);\n    toast.success(\"El producto se ha agragado con Ã©xito\");\n    console.log(\"datos del form enviados\", nuevoProducto); //\" aca se puede ver en la consoloa el Json\"\n\n    await axios.post(\"http://localhost:3001/api/product\", nuevoProducto);\n  };\n\n  /*#__PURE__*/\n  _jsxDEV(\"div\", {\n    className: \"con\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"login_Developer1\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Registrar proyecto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campos1 \",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nombre \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Objetivos generales \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Objetivos especificos \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Presupuesto \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Fecha inicial\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 3\n  }, this); // eslint-disable-next-line no-lone-blocks\n\n\n  {\n    /*\r\n    \n       return (\r\n    \n         \r\n               \r\n            \r\n               <section className=\"login_Developer_2\"> \r\n    \n                 <form ref={form} onSubmit ={submitForm}>\r\n                   <h3>Nuevo estudiante</h3>\r\n                   <label htmlfor=\"producto\">ingrese id</label>\r\n                     <label htmlfor=\"producto\">ingrese estudiante</label>\r\n                 \r\n                     <label htmlfor=\"producto\">ingrese cedula</label>\r\n                     <label htmlfor=\"producto\">estado</label>\r\n                     <input  required type=\"text\" placeholder=\"IdEstudiante\"  name =\"codigo\" />\r\n                     <input required type=\"text\" placeholder=\"NuevoEstudiante\" name=\"nombre\" /> \r\n                     <input  required  type=\"id\" placeholder=\"documento\"  name=\"precio\" />\r\n                      \r\n                       <select  required    \r\n                       name=\"estado\" \r\n                        type=\"id\" \r\n                       placeholder=\"Estado\" >\r\n                         <option>Activo</option>\r\n                         <option>No_activo</option>\r\n                         </select>\r\n                         <button type=\"submit\" className =\"buttoning \"  >\r\n                        Ingresar \r\n                        </button>\r\n                       \r\n                   \r\n                 </form>\r\n                 \r\n                 <table>\r\n                       <thead>\r\n                         <tr> \r\n                           <th>id estudiante</th> \r\n                           <th>Detalle estudiante</th> \r\n                           <th>documento</th>  \r\n                           <th>  Estado </th> \r\n                           <th>Acciones</th>\r\n                         \r\n                           \r\n                         </tr>\r\n                       </thead>\r\n                       <tbody>\r\n                         {listaProductos.map((productos)=>{\r\n                           return (\r\n                             \r\n                             < FilaProducto key={nanoid()} productos = {productos}/>\r\n                           )\r\n                         })}              \r\n                       </tbody>\r\n    \n                \r\n                     </table>  \r\n             \r\n                     </section>    \r\n                      \r\n       );\r\n        */\n  }\n};\n\n_s2(TablaEstudiante2, \"dUT+J9Q4I9+ukohG10WrTSutSh4=\");\n\n_c2 = TablaEstudiante2;\nexport default TablaEstudiante2;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FilaProducto\");\n$RefreshReg$(_c2, \"TablaEstudiante2\");","map":{"version":3,"sources":["C:/Users/Natalia A/Desktop/Software_Gestion_de_Proyectos/src/components/TablaEstudiante2.jsx"],"names":["useEffect","useState","useRef","ToastContainer","toast","axios","nanoid","FilaProducto","productos","console","log","edit","setEdit","infoNuevoProducto","setInfoNuevoProducto","id","_id","codigo","nombre","precio","estado","actualizarProducto","put","then","response","data","success","window","location","reload","catch","error","TablaEstudiante2","listaProductos","setMostrarProductos","form","submitForm","e","preventDefault","fd","FormData","current","nuevoProducto","forEach","value","key","post"],"mappings":"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","sourcesContent":["import { useEffect, useState, useRef } from \"react/cjs/react.development\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"../Estilos/producto.css\"\r\nimport axios from \"axios\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nconst FilaProducto =({productos}) => {\r\n  console.log(\"productos\",productos)\r\n  const[edit, setEdit] = useState(false);\r\n  const [infoNuevoProducto, setInfoNuevoProducto] = useState({\r\n    id: productos._id,\r\n    codigo:productos.codigo,\r\n    nombre: productos.nombre,\r\n    precio: productos.precio,\r\n    estado: productos.estado,\r\n  })\r\n  const actualizarProducto = async()=>{\r\n    console.log(infoNuevoProducto)\r\n    // const options = {\r\n    //   method: 'PUT',\r\n    //   url: 'http://localhost:3001/api/product',\r\n    //   headers: {'Content-Type': 'application/json'},\r\n    //   data: { infoNuevoProducto}\r\n    // };\r\n    \r\n    await axios.put('http://localhost:3001/api/product', infoNuevoProducto)\r\n    .then(function (response) {\r\n      console.log(response.data);\r\n      toast.success(\"producto modificado con exito\");\r\n      setEdit(false);\r\n      window.location.reload();\r\n     \r\n    })\r\n    .catch(function (error) {\r\n      toast.error(\"Error al modificar producto\")\r\n      console.error(error);\r\n    });\r\n\r\n  };\r\n  \r\n// eslint-disable-next-line no-lone-blocks\r\n{/*return (\r\n    \r\n<tr> \r\n  {edit ? (\r\n <>\r\n    <td>\r\n      <input  \r\n      type =\"text\" \r\n      value={infoNuevoProducto.codigo}\r\n      onChange={(e)=>setInfoNuevoProducto({...infoNuevoProducto, codigo:e.target.value})} \r\n      />\r\n    </td>\r\n    <td>\r\n      <input \r\n      type =\"text\" \r\n      value={infoNuevoProducto.nombre}\r\n      onChange={(e)=>setInfoNuevoProducto({...infoNuevoProducto, nombre:e.target.value})}\r\n      />\r\n    </td>\r\n    <td>\r\n      <input \r\n      type =\"text\"\r\n      value={infoNuevoProducto.precio}\r\n      onChange={(e)=>setInfoNuevoProducto({...infoNuevoProducto, precio:e.target.value})}\r\n      />\r\n      </td>\r\n    <td>\r\n      <input \r\n      type =\"text\"\r\n      value={infoNuevoProducto.estado}\r\n      onChange={(e)=>setInfoNuevoProducto({...infoNuevoProducto, estado:e.target.value})} \r\n      />\r\n      </td>\r\n    </>\r\n  \r\n   ): (\r\n     <>\r\n  <td>{productos.codigo} </td>\r\n  <td>{productos.nombre}</td> \r\n  <td>{productos.precio}</td>\r\n  <td>{productos.estado}</td> \r\n    </>\r\n   )}\r\n   <td>\r\n   <div >\r\n     {edit ? (\r\n     <a \r\n     onClick={()=> actualizarProducto()} \r\n     className=\"fas fa-check a\"\r\n     />\r\n     ):(\r\n     <a \r\n     onClick={()=>setEdit(!edit)} \r\n     className=\"fas fa-pencil-alt a\" \r\n     />\r\n     )}\r\n     < a  \r\n     className=\"fas fa-trash-alt a\"/>\r\n     </div>\r\n     </td>\r\n     </tr>\r\n \r\n\r\n) */}\r\n\r\n}\r\n\r\nconst TablaEstudiante2 = ({listaProductos, setMostrarProductos }) =>{\r\n  \r\n  useEffect(() =>{\r\n    console.log(\"este es el contenido del la lsita de productos\", listaProductos)\r\n    }, [listaProductos]);\r\n\r\n    const form = useRef(null);\r\n    \r\n    \r\n    const submitForm = async(e)=> {\r\n      e.preventDefault();\r\n      const fd = new  FormData(form.current);\r\n      // esa variable esta como objeto vacio y alli ingresa los imput como un formato Json, \r\n      const nuevoProducto ={};\r\n      fd.forEach((value, key)=>{\r\n          nuevoProducto[key] = value;\r\n      })  \r\n      setMostrarProductos([...listaProductos,nuevoProducto]);\r\n      toast.success( \"El producto se ha agragado con Ã©xito\")\r\n      console.log(\"datos del form enviados\", nuevoProducto); //\" aca se puede ver en la consoloa el Json\"\r\n      await axios.post(\"http://localhost:3001/api/product\", nuevoProducto)\r\n  }\r\n  \r\n  <div className=\"con\">\r\n  <section className=\"login_Developer1\">\r\n <h1>Registrar proyecto</h1>   \r\n<div className=\"campos1 \">\r\n   <label >Nombre </label>\r\n   <input type=\"text\" className=\"form-control\" />\r\n   <label >Objetivos generales </label>\r\n   <input type=\"text\" className=\"form-control\"  />\r\n   <label >Objetivos especificos </label>\r\n   <input type=\"text\"  className=\"form-control\"  />\r\n   <label >Presupuesto </label>\r\n   <input type=\"text\" className=\"form-control\"  />\r\n   <label >Fecha inicial</label>\r\n   <input type=\"date\"  className=\"form-control\"  />\r\n</div>\r\n</section>\r\n</div>\r\n// eslint-disable-next-line no-lone-blocks\r\n{/*\r\n\r\n    return (\r\n\r\n      \r\n            \r\n         \r\n            <section className=\"login_Developer_2\"> \r\n\r\n              <form ref={form} onSubmit ={submitForm}>\r\n                <h3>Nuevo estudiante</h3>\r\n                <label htmlfor=\"producto\">ingrese id</label>\r\n                  <label htmlfor=\"producto\">ingrese estudiante</label>\r\n              \r\n                  <label htmlfor=\"producto\">ingrese cedula</label>\r\n                  <label htmlfor=\"producto\">estado</label>\r\n                  <input  required type=\"text\" placeholder=\"IdEstudiante\"  name =\"codigo\" />\r\n                  <input required type=\"text\" placeholder=\"NuevoEstudiante\" name=\"nombre\" /> \r\n                  <input  required  type=\"id\" placeholder=\"documento\"  name=\"precio\" />\r\n                   \r\n                    <select  required    \r\n                    name=\"estado\" \r\n                     type=\"id\" \r\n                    placeholder=\"Estado\" >\r\n                      <option>Activo</option>\r\n                      <option>No_activo</option>\r\n                      </select>\r\n                      <button type=\"submit\" className =\"buttoning \"  >\r\n                     Ingresar \r\n                     </button>\r\n                    \r\n                \r\n              </form>\r\n              \r\n              <table>\r\n                    <thead>\r\n                      <tr> \r\n                        <th>id estudiante</th> \r\n                        <th>Detalle estudiante</th> \r\n                        <th>documento</th>  \r\n                        <th>  Estado </th> \r\n                        <th>Acciones</th>\r\n                      \r\n                        \r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {listaProductos.map((productos)=>{\r\n                        return (\r\n                          \r\n                          < FilaProducto key={nanoid()} productos = {productos}/>\r\n                        )\r\n                      })}              \r\n                    </tbody>\r\n\r\n             \r\n                  </table>  \r\n          \r\n                  </section>    \r\n                   \r\n    );\r\n     */}\r\n};\r\n\r\nexport default TablaEstudiante2;"]},"metadata":{},"sourceType":"module"}