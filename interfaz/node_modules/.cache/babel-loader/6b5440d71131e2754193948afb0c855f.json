{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Natalia A\\\\Desktop\\\\Software_Gestion_de_Proyectos\\\\src\\\\components\\\\TablaAvances.jsx\";\nimport { useEffect, useState, useRef } from \"react/cjs/react.development\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"../Estilos/producto.css\";\nimport axios from \"axios\";\nimport { nanoid } from \"nanoid\"; // eslint-disable-next-line no-lone-blocks\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{\n  /*const FilaProducto =({productos}) => {\r\n   console.log(\"productos\",productos)\r\n   const[edit, setEdit] = useState(false);\r\n   const [infoNuevoProducto, setInfoNuevoProducto] = useState({\r\n     id: productos._id,\r\n     codigo:productos.codigo,\r\n     nombre: productos.nombre,\r\n     precio: productos.precio,\r\n     estado: productos.estado,\r\n   })\r\n   const actualizarProducto = async()=>{\r\n     console.log(infoNuevoProducto)\r\n     // const options = {\r\n     //   method: 'PUT',\r\n     //   url: 'http://localhost:3001/api/product',\r\n     //   headers: {'Content-Type': 'application/json'},\r\n     //   data: { infoNuevoProducto}\r\n     // };\r\n     \r\n     await axios.put('http://localhost:3001/api/product', infoNuevoProducto)\r\n     .then(function (response) {\r\n       console.log(response.data);\r\n       toast.success(\"producto modificado con exito\");\r\n       setEdit(false);\r\n       window.location.reload();\r\n      \r\n     })\r\n     .catch(function (error) {\r\n       toast.error(\"Error al modificar producto\")\r\n       console.error(error);\r\n     });\r\n  \n   };\r\n   \r\n  // eslint-disable-next-line no-lone-blocks\r\n  return (\r\n     \r\n  <tr> \r\n   {edit ? (\r\n  <>\r\n     <td>\r\n       <input  \r\n       type =\"text\" \r\n       value={infoNuevoProducto.codigo}\r\n       onChange={(e)=>setInfoNuevoProducto({...infoNuevoProducto, codigo:e.target.value})} \r\n       />\r\n     </td>\r\n     <td>\r\n       <input \r\n       type =\"text\" \r\n       value={infoNuevoProducto.nombre}\r\n       onChange={(e)=>setInfoNuevoProducto({...infoNuevoProducto, nombre:e.target.value})}\r\n       />\r\n     </td>\r\n     <td>\r\n       <input \r\n       type =\"text\"\r\n       value={infoNuevoProducto.precio}\r\n       onChange={(e)=>setInfoNuevoProducto({...infoNuevoProducto, precio:e.target.value})}\r\n       />\r\n       </td>\r\n     <td>\r\n       <input \r\n       type =\"text\"\r\n       value={infoNuevoProducto.estado}\r\n       onChange={(e)=>setInfoNuevoProducto({...infoNuevoProducto, estado:e.target.value})} \r\n       />\r\n       </td>\r\n     </>\r\n   \r\n    ): (\r\n      <>\r\n   <td>{productos.codigo} </td>\r\n   <td>{productos.nombre}</td> \r\n   <td>{productos.precio}</td>\r\n   <td>{productos.estado}</td> \r\n     </>\r\n    )}\r\n    <td>\r\n    <div >\r\n      {edit ? (\r\n      <a \r\n      onClick={()=> actualizarProducto()} \r\n      className=\"fas fa-check a\"\r\n      />\r\n      ):(\r\n      <a \r\n      onClick={()=>setEdit(!edit)} \r\n      className=\"fas fa-pencil-alt a\" \r\n      />\r\n      )}\r\n      < a  \r\n      className=\"fas fa-trash-alt a\"/>\r\n      </div>\r\n      </td>\r\n      </tr>\r\n  \r\n  \n  ) \r\n  \n  }\r\n  \n  const TablaAvances = ({listaProductos, setMostrarProductos }) =>{\r\n   \r\n   useEffect(() =>{\r\n     console.log(\"este es el contenido del la lsita de productos\", listaProductos)\r\n     }, [listaProductos]);\r\n  \n     const form = useRef(null);\r\n     \r\n     \r\n     const submitForm = async(e)=> {\r\n       e.preventDefault();\r\n       const fd = new  FormData(form.current);\r\n       // esa variable esta como objeto vacio y alli ingresa los imput como un formato Json, \r\n       const nuevoProducto ={};\r\n       fd.forEach((value, key)=>{\r\n           nuevoProducto[key] = value;\r\n       })  \r\n       setMostrarProductos([...listaProductos,nuevoProducto]);\r\n       toast.success( \"El producto se ha agragado con Ã©xito\")\r\n       console.log(\"datos del form enviados\", nuevoProducto); //\" aca se puede ver en la consoloa el Json\"\r\n       await axios.post(\"http://localhost:3001/api/product\", nuevoProducto)\r\n   }\r\n  \n     return (\r\n  \n       \r\n             \r\n          \r\n             <section className=\"login_Developer_2\"> \r\n  \n               <form ref={form} onSubmit ={submitForm}>\r\n                 <h3>Nuevo estudiante</h3>\r\n                 <label htmlfor=\"producto\">ingrese id</label>\r\n                   <label htmlfor=\"producto\">ingrese estudiante</label>\r\n               \r\n                   <label htmlfor=\"producto\">ingrese cedula</label>\r\n                   <label htmlfor=\"producto\">estado</label>\r\n                   <input  required type=\"text\" placeholder=\"IdEstudiante\"  name =\"codigo\" />\r\n                   <input required type=\"text\" placeholder=\"NuevoEstudiante\" name=\"nombre\" /> \r\n                   <input  required  type=\"id\" placeholder=\"documento\"  name=\"precio\" />\r\n                    \r\n                     <select  required    \r\n                     name=\"estado\" \r\n                      type=\"id\" \r\n                     placeholder=\"Estado\" >\r\n                       <option>Activo</option>\r\n                       <option>No_activo</option>\r\n                       </select>\r\n                       <button type=\"submit\" className =\"buttoning \"  >\r\n                      Ingresar \r\n                      </button>\r\n                     \r\n                 \r\n               </form>\r\n               \r\n               <table>\r\n                     <thead>\r\n                       <tr> \r\n                         <th>id estudiante</th> \r\n                         <th>Detalle estudiante</th> \r\n                         <th>documento</th>  \r\n                         <th>  Estado </th> \r\n                         <th>Acciones</th>\r\n                       \r\n                         \r\n                       </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                       {listaProductos.map((productos)=>{\r\n                         return (\r\n                           \r\n                           < FilaProducto key={nanoid()} productos = {productos}/>\r\n                         )\r\n                       })}              \r\n                     </tbody>\r\n  \n              \r\n                   </table>  \r\n           \r\n                   </section>    \r\n                    \r\n     );\r\n     \r\n  }; */\n}\n\nconst TablaAvances = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"con\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"login_Developer_1\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Registrar Avance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hhh \",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Identificador del proyecto \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Fecha del avance \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Descripcion del avance \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Observacion \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Id del usuario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text \",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boton1\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"ingresar\",\n        children: \"Insertar avance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 1\n  }, this);\n};\n\n_c = TablaAvances;\nexport default TablaAvances;\n\nvar _c;\n\n$RefreshReg$(_c, \"TablaAvances\");","map":{"version":3,"sources":["C:/Users/Natalia A/Desktop/Software_Gestion_de_Proyectos/src/components/TablaAvances.jsx"],"names":["useEffect","useState","useRef","ToastContainer","toast","axios","nanoid","TablaAvances"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,6BAA5C;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,OAAO,yBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvsBACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACA;AAAS,MAAA,SAAS,EAAC,mBAAnB;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,SAAS,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD,eAIC;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,SAAS,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAJD,eAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALD,eAMC;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAoB,UAAA,SAAS,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAND,eAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPD,eAQC;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,SAAS,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,gBARD,eASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATD,eAUC;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAqB,UAAA,SAAS,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAVD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAgBA;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACW;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,EAAE,EAAC,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADX;AAAA;AAAA;AAAA;AAAA,YAhBA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAuBE,CAxBD;;KAAMA,Y;AA0BP,eAAeA,YAAf","sourcesContent":["import { useEffect, useState, useRef } from \"react/cjs/react.development\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"../Estilos/producto.css\"\r\nimport axios from \"axios\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\n// eslint-disable-next-line no-lone-blocks\r\n{/*const FilaProducto =({productos}) => {\r\n  console.log(\"productos\",productos)\r\n  const[edit, setEdit] = useState(false);\r\n  const [infoNuevoProducto, setInfoNuevoProducto] = useState({\r\n    id: productos._id,\r\n    codigo:productos.codigo,\r\n    nombre: productos.nombre,\r\n    precio: productos.precio,\r\n    estado: productos.estado,\r\n  })\r\n  const actualizarProducto = async()=>{\r\n    console.log(infoNuevoProducto)\r\n    // const options = {\r\n    //   method: 'PUT',\r\n    //   url: 'http://localhost:3001/api/product',\r\n    //   headers: {'Content-Type': 'application/json'},\r\n    //   data: { infoNuevoProducto}\r\n    // };\r\n    \r\n    await axios.put('http://localhost:3001/api/product', infoNuevoProducto)\r\n    .then(function (response) {\r\n      console.log(response.data);\r\n      toast.success(\"producto modificado con exito\");\r\n      setEdit(false);\r\n      window.location.reload();\r\n     \r\n    })\r\n    .catch(function (error) {\r\n      toast.error(\"Error al modificar producto\")\r\n      console.error(error);\r\n    });\r\n\r\n  };\r\n  \r\n// eslint-disable-next-line no-lone-blocks\r\nreturn (\r\n    \r\n<tr> \r\n  {edit ? (\r\n <>\r\n    <td>\r\n      <input  \r\n      type =\"text\" \r\n      value={infoNuevoProducto.codigo}\r\n      onChange={(e)=>setInfoNuevoProducto({...infoNuevoProducto, codigo:e.target.value})} \r\n      />\r\n    </td>\r\n    <td>\r\n      <input \r\n      type =\"text\" \r\n      value={infoNuevoProducto.nombre}\r\n      onChange={(e)=>setInfoNuevoProducto({...infoNuevoProducto, nombre:e.target.value})}\r\n      />\r\n    </td>\r\n    <td>\r\n      <input \r\n      type =\"text\"\r\n      value={infoNuevoProducto.precio}\r\n      onChange={(e)=>setInfoNuevoProducto({...infoNuevoProducto, precio:e.target.value})}\r\n      />\r\n      </td>\r\n    <td>\r\n      <input \r\n      type =\"text\"\r\n      value={infoNuevoProducto.estado}\r\n      onChange={(e)=>setInfoNuevoProducto({...infoNuevoProducto, estado:e.target.value})} \r\n      />\r\n      </td>\r\n    </>\r\n  \r\n   ): (\r\n     <>\r\n  <td>{productos.codigo} </td>\r\n  <td>{productos.nombre}</td> \r\n  <td>{productos.precio}</td>\r\n  <td>{productos.estado}</td> \r\n    </>\r\n   )}\r\n   <td>\r\n   <div >\r\n     {edit ? (\r\n     <a \r\n     onClick={()=> actualizarProducto()} \r\n     className=\"fas fa-check a\"\r\n     />\r\n     ):(\r\n     <a \r\n     onClick={()=>setEdit(!edit)} \r\n     className=\"fas fa-pencil-alt a\" \r\n     />\r\n     )}\r\n     < a  \r\n     className=\"fas fa-trash-alt a\"/>\r\n     </div>\r\n     </td>\r\n     </tr>\r\n \r\n\r\n) \r\n\r\n}\r\n\r\nconst TablaAvances = ({listaProductos, setMostrarProductos }) =>{\r\n  \r\n  useEffect(() =>{\r\n    console.log(\"este es el contenido del la lsita de productos\", listaProductos)\r\n    }, [listaProductos]);\r\n\r\n    const form = useRef(null);\r\n    \r\n    \r\n    const submitForm = async(e)=> {\r\n      e.preventDefault();\r\n      const fd = new  FormData(form.current);\r\n      // esa variable esta como objeto vacio y alli ingresa los imput como un formato Json, \r\n      const nuevoProducto ={};\r\n      fd.forEach((value, key)=>{\r\n          nuevoProducto[key] = value;\r\n      })  \r\n      setMostrarProductos([...listaProductos,nuevoProducto]);\r\n      toast.success( \"El producto se ha agragado con Ã©xito\")\r\n      console.log(\"datos del form enviados\", nuevoProducto); //\" aca se puede ver en la consoloa el Json\"\r\n      await axios.post(\"http://localhost:3001/api/product\", nuevoProducto)\r\n  }\r\n\r\n    return (\r\n\r\n      \r\n            \r\n         \r\n            <section className=\"login_Developer_2\"> \r\n\r\n              <form ref={form} onSubmit ={submitForm}>\r\n                <h3>Nuevo estudiante</h3>\r\n                <label htmlfor=\"producto\">ingrese id</label>\r\n                  <label htmlfor=\"producto\">ingrese estudiante</label>\r\n              \r\n                  <label htmlfor=\"producto\">ingrese cedula</label>\r\n                  <label htmlfor=\"producto\">estado</label>\r\n                  <input  required type=\"text\" placeholder=\"IdEstudiante\"  name =\"codigo\" />\r\n                  <input required type=\"text\" placeholder=\"NuevoEstudiante\" name=\"nombre\" /> \r\n                  <input  required  type=\"id\" placeholder=\"documento\"  name=\"precio\" />\r\n                   \r\n                    <select  required    \r\n                    name=\"estado\" \r\n                     type=\"id\" \r\n                    placeholder=\"Estado\" >\r\n                      <option>Activo</option>\r\n                      <option>No_activo</option>\r\n                      </select>\r\n                      <button type=\"submit\" className =\"buttoning \"  >\r\n                     Ingresar \r\n                     </button>\r\n                    \r\n                \r\n              </form>\r\n              \r\n              <table>\r\n                    <thead>\r\n                      <tr> \r\n                        <th>id estudiante</th> \r\n                        <th>Detalle estudiante</th> \r\n                        <th>documento</th>  \r\n                        <th>  Estado </th> \r\n                        <th>Acciones</th>\r\n                      \r\n                        \r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {listaProductos.map((productos)=>{\r\n                        return (\r\n                          \r\n                          < FilaProducto key={nanoid()} productos = {productos}/>\r\n                        )\r\n                      })}              \r\n                    </tbody>\r\n\r\n             \r\n                  </table>  \r\n          \r\n                  </section>    \r\n                   \r\n    );\r\n    \r\n }; */}\r\n\r\n const TablaAvances = () =>{\r\nreturn(\r\n<div className=\"con\">\r\n<section className=\"login_Developer_1\">\r\n<h1>Registrar Avance</h1>   \r\n<div className=\"hhh \">\r\n <label >Identificador del proyecto </label>\r\n <input type=\"text\" className=\"form-control\" />\r\n <label >Fecha del avance </label>\r\n <input type=\"text\" className=\"form-control\"  />\r\n <label >Descripcion del avance </label>\r\n <input type=\"text\"  className=\"form-control\"  /> \r\n <label >Observacion </label>\r\n <input type=\"text\" className=\"form-control\"  />\r\n <label >Id del usuario</label>\r\n <input type=\"text \"  className=\"form-control\"  />\r\n</div>\r\n</section>\r\n<div className=\"boton1\">\r\n           <button type=\"button\" id=\"ingresar\" >Insertar avance</button> \r\n           \r\n           </div>\r\n</div>\r\n)\r\n }\r\n\r\nexport default TablaAvances;"]},"metadata":{},"sourceType":"module"}